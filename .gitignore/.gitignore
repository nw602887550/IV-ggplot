library(smbinning)
library(plyr)
library(dplyr)
library(rlist)
library(tcltk)
library(ggplot2)

#infile = 'C:/Users/Administrator/Desktop/scorecard/R-scorecard-master/'
df = read.csv('1.csv',header = T,stringsAsFactors = F)
#设置y变量名
df = plyr::rename(df_1,c("ever_30" = "y"))
#等深分箱（5等分,剔除首尾）
dengshen = function(Data,Name){
  Quantile = quantile(Data[Name],seq(0,1,0.2),na.rm = T)
  smbinning.custom(Data,'y',Name,Quantile[2:length(Quantile) - 1])$ivtable
}
#设置一个空list
data_iv = list()
L = dim(df)[2] - 1
fenxiang = function(Data){
  pb <- tkProgressBar("进度","已完成 %",0,100) 
  for(Name in colnames(Data)){
    if(Name != 'y'){
      if(dim(unique(Data[Name],rm.na = T))[1] <= 3){
        Data[Name] = as.factor(Data[,Name])}else{
          Data[Name] = Data[Name]}
      if(Data[,Name] %>% is.factor){
        eval(parse(text = paste0("data_iv = data_iv %>% 
                                 list.append(.,",Name," = smbinning.factor(Data,'y',Name)$ivtable)")))
      }else{
        eval(parse(text = paste0("data_iv = data_iv %>% 
                                 list.append(.,",Name,"= tryCatch(smbinning(Data,'y',Name)$ivtable,error = function(x) dengshen(Data,Name)))")))
      }
      }
    info<- sprintf("已完成%d%%",round(which(colnames(Data) == Name) * 100/L))
    setTkProgressBar(pb,
                     which(colnames(Data) == Name) * 100/L,
                     sprintf("进度(%s)", info),info) 
    }
  close(pb)
  return(data_iv %>% ldply())
  }

#开始分箱
iv = fenxiang(df) 
write.csv(iv,'iv.csv')

#提取IV值大于等于0.05的变量

iv_total = iv[iv$"Cutpoint" == 'Total',] 
iv_total_sort = iv_total[order(iv_total$IV,decreasing = T),]
var_high_iv = dplyr::filter(iv_total_sort,IV >= 0.05)$.id


#ggplot2画图(分箱)
df_1 = iv[!iv$"Cutpoint" == 'Total',] 
for(i in var_high_iv){
  df_var = dplyr::filter(dplyr::select(df_1,.id,Cutpoint,PctRec,BadRate),
                         .id == i) 
  Levels = unique(df_var$Cutpoint)
  df_var = df_var[!duplicated(df_var$Cutpoint),]
  df_var$Cutpoint = factor(df_var$Cutpoint,levels = Levels)
  eval(parse(text = paste0("png('",i,".png',width=600,height=600)")))
  p = eval(parse(text = paste0("ggplot(df_var,aes(x = Cutpoint)) + labs(x = 'Cutpoint',y = 'Rate',title = 'iv = ",iv_total[iv_total$'.id' == i,]$IV,"') + theme(plot.title = element_text(hjust = 0.5))")))
  final_picture = p + geom_bar(aes(y = PctRec),stat = 'identity',fill = 'red')+ geom_line(aes(y = BadRate,group = 1)) + geom_point(aes(y = BadRate),size = 4,shape = 20)
  print(final_picture)
  dev.off()
}

#IV大于0.05的变量相关性分析

sj_cor = cor(na.omit(sj_1[var_high_iv]))
write.csv(sj_cor,'sj_cor.csv')









